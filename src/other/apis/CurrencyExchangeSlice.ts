import { createAsyncThunk, createSlice, PayloadAction } from "@reduxjs/toolkit";
import axios from "axios";
import { CurrencyExchangeModel } from "./CurrencyExchangeModel";

const initialState: CurrencyExchangeModel = {
  aave: 0,
  ada: 0,
  aed: 0,
  afn: 0,
  agix: 0,
  akt: 0,
  algo: 0,
  all: 0,
  amd: 0,
  amp: 0,
  ang: 0,
  aoa: 0,
  ape: 0,
  apt: 0,
  ar: 0,
  arb: 0,
  ars: 0,
  atom: 0,
  ats: 0,
  aud: 0,
  avax: 0,
  awg: 0,
  axs: 0,
  azm: 0,
  azn: 0,
  bake: 0,
  bam: 0,
  bat: 0,
  bbd: 0,
  bch: 0,
  bdt: 0,
  bef: 0,
  bgn: 0,
  bhd: 0,
  bif: 0,
  bmd: 0,
  bnb: 0,
  bnd: 0,
  bob: 0,
  brl: 0,
  bsd: 0,
  bsv: 0,
  bsw: 0,
  btc: 0,
  btcb: 0,
  btg: 0,
  btn: 0,
  btt: 0,
  busd: 0,
  bwp: 0,
  byn: 0,
  byr: 0,
  bzd: 0,
  cad: 0,
  cake: 0,
  cdf: 0,
  celo: 0,
  cfx: 0,
  chf: 0,
  chz: 0,
  clp: 0,
  cnh: 0,
  cny: 0,
  comp: 0,
  cop: 0,
  crc: 0,
  cro: 0,
  crv: 0,
  cspr: 0,
  cuc: 0,
  cup: 0,
  cve: 0,
  cvx: 0,
  cyp: 0,
  czk: 0,
  dai: 0,
  dash: 0,
  dcr: 0,
  dem: 0,
  dfi: 0,
  djf: 0,
  dkk: 0,
  doge: 0,
  dop: 0,
  dot: 0,
  dydx: 0,
  dzd: 0,
  eek: 0,
  egld: 0,
  egp: 0,
  enj: 0,
  eos: 0,
  ern: 0,
  esp: 0,
  etb: 0,
  etc: 0,
  eth: 0,
  eur: 0,
  fei: 0,
  fil: 0,
  fim: 0,
  fjd: 0,
  fkp: 0,
  flow: 0,
  flr: 0,
  frax: 0,
  frf: 0,
  ftm: 0,
  ftt: 0,
  fxs: 0,
  gala: 0,
  gbp: 0,
  gel: 0,
  ggp: 0,
  ghc: 0,
  ghs: 0,
  gip: 0,
  gmd: 0,
  gmx: 0,
  gnf: 0,
  gno: 0,
  grd: 0,
  grt: 0,
  gt: 0,
  gtq: 0,
  gusd: 0,
  gyd: 0,
  hbar: 0,
  hkd: 0,
  hnl: 0,
  hnt: 0,
  hot: 0,
  hrk: 0,
  ht: 0,
  htg: 0,
  huf: 0,
  icp: 0,
  idr: 0,
  iep: 0,
  ils: 0,
  imp: 0,
  imx: 0,
  inj: 0,
  inr: 0,
  iqd: 0,
  irr: 0,
  isk: 0,
  itl: 0,
  jep: 0,
  jmd: 0,
  jod: 0,
  jpy: 0,
  kas: 0,
  kava: 0,
  kcs: 0,
  kda: 0,
  kes: 0,
  kgs: 0,
  khr: 0,
  klay: 0,
  kmf: 0,
  knc: 0,
  kpw: 0,
  krw: 0,
  ksm: 0,
  kwd: 0,
  kyd: 0,
  kzt: 0,
  lak: 0,
  lbp: 0,
  ldo: 0,
  leo: 0,
  link: 0,
  lkr: 0,
  lrc: 0,
  lrd: 0,
  lsl: 0,
  ltc: 0,
  ltl: 0,
  luf: 0,
  luna: 0,
  lunc: 0,
  lvl: 0,
  lyd: 0,
  mad: 0,
  mana: 0,
  matic: 0,
  mbx: 0,
  mdl: 0,
  mga: 0,
  mgf: 0,
  mina: 0,
  mkd: 0,
  mkr: 0,
  mmk: 0,
  mnt: 0,
  mop: 0,
  mro: 0,
  mru: 0,
  mtl: 0,
  mur: 0,
  mvr: 0,
  mwk: 0,
  mxn: 0,
  mxv: 0,
  myr: 0,
  mzm: 0,
  mzn: 0,
  nad: 0,
  near: 0,
  neo: 0,
  nexo: 0,
  nft: 0,
  ngn: 0,
  nio: 0,
  nlg: 0,
  nok: 0,
  npr: 0,
  nzd: 0,
  okb: 0,
  omr: 0,
  one: 0,
  op: 0,
  ordi: 0,
  pab: 0,
  paxg: 0,
  pen: 0,
  pepe: 0,
  pgk: 0,
  php: 0,
  pkr: 0,
  pln: 0,
  pte: 0,
  pyg: 0,
  qar: 0,
  qnt: 0,
  qtum: 0,
  rol: 0,
  ron: 0,
  rpl: 0,
  rsd: 0,
  rub: 0,
  rune: 0,
  rvn: 0,
  rwf: 0,
  sand: 0,
  sar: 0,
  sbd: 0,
  scr: 0,
  sdd: 0,
  sdg: 0,
  sek: 0,
  sgd: 0,
  shib: 0,
  shp: 0,
  sit: 0,
  skk: 0,
  sle: 0,
  sll: 0,
  snx: 0,
  sol: 0,
  sos: 0,
  spl: 0,
  srd: 0,
  srg: 0,
  std: 0,
  stn: 0,
  stx: 0,
  sui: 0,
  svc: 0,
  syp: 0,
  szl: 0,
  thb: 0,
  theta: 0,
  tjs: 0,
  tmm: 0,
  tmt: 0,
  tnd: 0,
  ton: 0,
  top: 0,
  trl: 0,
  trx: 0,
  try: 0,
  ttd: 0,
  tusd: 0,
  tvd: 0,
  twd: 0,
  twt: 0,
  tzs: 0,
  uah: 0,
  ugx: 0,
  uni: 0,
  usd: 0,
  usdc: 0,
  usdd: 0,
  usdp: 0,
  usdt: 0,
  uyu: 0,
  uzs: 0,
  val: 0,
  veb: 0,
  ved: 0,
  vef: 0,
  ves: 0,
  vet: 0,
  vnd: 0,
  vuv: 0,
  waves: 0,
  wemix: 0,
  woo: 0,
  wst: 0,
  xaf: 0,
  xag: 0,
  xau: 0,
  xaut: 0,
  xbt: 0,
  xcd: 0,
  xch: 0,
  xdc: 0,
  xdr: 0,
  xec: 0,
  xem: 0,
  xlm: 0,
  xmr: 0,
  xof: 0,
  xpd: 0,
  xpf: 0,
  xrp: 0,
  xtz: 0,
  yer: 0,
  zar: 0,
  zec: 0,
  zil: 0,
  zmk: 0,
  zmw: 0,
  zwd: 0,
  zwg: 0,
  zwl: 0,
};

export const fetchCurrencyExchange = createAsyncThunk(
  "fetchCurrencies",
  async () => {
    try {
      const result = await axios.get(
        "https://cdn.jsdelivr.net/npm/@fawazahmed0/currency-api@latest/v1/currencies/eur.json"
      );
      return result.data.eur;
    } catch (error) {
      if (axios.isCancel(error)) {
        console.log("FETCH API COUNTRIES CANCELLED: ", error.message);
      }
    }
  }
);

const CurrencyExchangeSlice = createSlice({
  name: "currencyExchange",
  initialState,
  reducers: {},

  extraReducers: (builder) => {
    builder.addCase(
      fetchCurrencyExchange.fulfilled,
      (state, action: PayloadAction<Partial<CurrencyExchangeModel>>) => {
        const payload = action.payload;

        // Ensure payload is not undefined or null before processing
        if (payload && typeof payload === "object") {
          Object.keys(payload).forEach((key) => {
            const currencyKey = key as keyof CurrencyExchangeModel;
            if (currencyKey in state) {
              state[currencyKey] = payload[currencyKey] ?? 0; // Default to 0 if value is undefined
            }
          });
        } else {
          console.error("Invalid payload: ", payload);
        }
      }
    );
  },
});

export const getCurrencyExchange = (state: { currencyExchange: any }) =>
  state.currencyExchange;

export default CurrencyExchangeSlice.reducer;
